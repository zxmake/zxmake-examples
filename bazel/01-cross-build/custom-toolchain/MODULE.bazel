"""
This module provides examples for bazel cross building.

Author: TOMOCAT
Date: 2025-03-07
"""
module(
    name = "bazel-cross-build",
    version = "1.0.0",
)

############################################################
# 注册交叉编译工具链
############################################################
bazel_dep(name = "platforms", version = "0.0.10")
register_toolchains(
    "//toolchain:cc_toolchain_for_linux_aarch64",
)

############################################################
# 生成 compile_commands.json
############################################################

# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
    commit = "4f28899228fb3ad0126897876f147ca15026151e",
    # Replace the commit hash (above) with the latest (https://github.com/hedronvision/bazel-compile-commands-extractor/commits/main).
    # Even better, set up Renovate and let it do the work for you (see "Suggestion: Updates" in the README).
)

############################################################
# rules_cuda
############################################################
bazel_dep(name = "rules_cuda", version = "0.2.5")

# pick a specific version (this is optional an can be skipped)
# archive_override(
#     module_name = "rules_cuda",
#     integrity = "{SRI value}",  # see https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity
#     urls = "https://github.com/bazel-contrib/rules_cuda/archive/{git_commit_hash}.tar.gz",
#     strip_prefix = "rules_cuda-{git_commit_hash}",
# )

cuda = use_extension("@rules_cuda//cuda:extensions.bzl", "toolchain")
cuda.local_toolchain(
    name = "local_cuda",
    toolkit_path = "",
)
use_repo(cuda, "local_cuda")
